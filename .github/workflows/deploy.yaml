name: push to DOKS and update express-app-helm-charts repo

on:
  workflow_run:
    workflows: [ build and test express app ]
    types: [ completed ]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and push to DOCR

    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Build and push image to DigitalOcean Container Registry
        env:
          IMAGE_TAG: sha-${{ env.IMAGE_TAG }}
        run: |
          docker build -t registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/express:$IMAGE_TAG .
          docker push registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/express:$IMAGE_TAG

  deploy-express-app:
    name: Deploy express-app
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Setup yq
        uses: frenck/action-setup-yq@v1
      - name: Checkout express-app-helm-charts repo
        uses: actions/checkout@v3
        with:
          repository: Lisa-Stats/express-app-helm-charts
          token: ${{ secrets.PAT_TOKEN }}
      - name: Set up git user
        run: |
           git config --global user.email "lisa.stathopulos@gmail.com"
           git config --global user.name "Lisa-Stats"

      - name: Update express-app testing tag
        env:
          BRANCH_NAME: deploy/express-app/${{ env.IMAGE_TAG }}
          DIGITAL_OCEAN_IMAGE_TAG: sha-${{ env.IMAGE_TAG}}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git checkout -b $BRANCH_NAME
          cd charts/express-app
          # Insert correct image tag for express-app
          yq -i '.image.tag = strenv(DIGITAL_OCEAN_IMAGE_TAG)' values.yaml
          # Remove all whitespace and stage values.yaml file
          git diff -U0 -w --no-color --ignore-blank-lines --ignore-all-space | git apply --cached --ignore-whitespace --unidiff-zero -
          # Commit the changes
          git commit -m "Deploy express-app at $IMAGE_TAG"
          # Stash Changes
          git stash
          # Push the changes
          git push -u origin $BRANCH_NAME
          # Use Github CLI to create a PR
          gh pr create --title "Deploy express-app to testing at $IMAGE_TAG" --body "https://github.com/Lisa-Stats/express-app/commit/$IMAGE_TAG"
